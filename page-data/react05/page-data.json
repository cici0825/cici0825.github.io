{"componentChunkName":"component---src-templates-page-js","path":"/react05","result":{"data":{"markdownRemark":{"frontmatter":{"title":"React 實戰篇 - 留言板","date":"16 April 2020","path":"/react05","author":"WuFangCi","excerpt":"寫給自己看的筆記系列","tags":["React","useEffect","useLayoutEffect","week21","VirtualDOM","useCallback","memo"],"coverImage":null},"id":"a2faa634-fd0d-5d3c-be34-083f9b67696a","html":"<h1>先來切個版吧</h1>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">\"styled-components\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> Page <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>div<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> Title <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>h1<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  padding: 20px;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> MassageForm <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>form<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  width: 80%;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> MassageTextArea <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>textarea<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  border-radius: 10px 10px 0px 0px;\n  width: 98%;\n  display: block;\n  outline: none;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> SubmitButton <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>button<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  border-radius: 0px 0px 10px 10px;\n  background: black;\n  font-weight: bold;\n  color: white;\n  padding: 10px;\n  width: 100%;\n  outline: none;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> MassageList <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>div<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  width: 80%;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> MassageContainer <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>div<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  border: 0.5px solid gray;\n  /* display: flex;\n  align-items: center; */\n  border-radius: 10px;\n  margin-top: 20px;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> MassageHeader <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>div<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 15px;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> MassageAuthor <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>div<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  font-size: 22px;\n  min-width: 4em;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> MassageTime <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>div<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  font-size: 12px;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> MassageBody <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>div<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  padding: 0 10px 20px 15px;\n  word-break: break-all;\n  /* text-align: center; */\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 把 massage 包成一個 component 因為我們要再另傳資料進去</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Massage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> author<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">,</span> children <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>MassageContainer<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>MassageHeader<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>MassageAuthor<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>author<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>MassageAuthor<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>MassageTime<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>time<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>MassageTime<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>MassageHeader<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>MassageBody<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>MassageBody<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>MassageContainer<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Page<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Title<span class=\"token operator\">></span>Message Board<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Title<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>MassageForm<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>MassageTextArea rows<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">7</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>SubmitButton<span class=\"token operator\">></span> <span class=\"token constant\">SAND</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SubmitButton<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>MassageForm<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>MassageList<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Massage author<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"Cici Wu\"</span><span class=\"token punctuation\">}</span> time<span class=\"token operator\">=</span><span class=\"token string\">\"2020 - 11 - 22\"</span><span class=\"token operator\">></span>\n          lorem ipsum dolor sit amet<span class=\"token punctuation\">,</span> consectetur adip<span class=\"token punctuation\">,</span> lorem ipsum dolor sit\n          amet<span class=\"token punctuation\">.</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Massage<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>MassageList<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Page<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span></code></pre></div>\n<h1>串接 API 資料</h1>\n<p><a href=\"https://github.com/Lidemy/lidemy-student-json-api-server\">這次用的 data 是來自 Lidemy 開的練習 API</a></p>\n<h6>撈到 <strong>COMMENTS  API</strong></h6>\n<ul>\n<li>\n<p>撈到資料 > 設定 資料 state > 錯誤 state 處理</p>\n<ul>\n<li>==掛鉤資料的 state== ：因為我們的目的是取得資料，所以需要有個 state 來記住，初始化 massages state 。</li>\n<li>==在 component render 後拿資料，使用useEffect==：因為我們只想在網頁第一次 render 的時候拿到資料，不希望因為 state 改變就送出請求，因此可以使用 useEffect 傳空陣列，在瀏覽器 paint 畫面只會執行一次 。</li>\n<li>==串接API setState()==：用 fetch.then() 解析 data 後回傳 資料，setState(回傳後的資料)。</li>\n<li>==錯誤處理==：給定 Error state， 在 fetch.catch 接住 err.message 並 setError() 的狀態。</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>messages<span class=\"token punctuation\">,</span> setMessages<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>getMessagesApiError<span class=\"token punctuation\">,</span> setGetMessagesApiError<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token constant\">API_URL</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 1.解析資料</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setMassages</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 2.拿到 data 並設定 Massages state</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>    <span class=\"token comment\">// 3. 錯誤處理 並設定 setApiError state</span>\n        <span class=\"token function\">setGetMessagesApiError</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<hr>\n<h6>把我們寫好的 message State 和 err 傳進 COMPONENT 裡變成 瀏覽器畫出來的 UI</h6>\n<ul>\n<li>\n<p>==MAP 出 我們拿到的資料==</p>\n<ul>\n<li>寫一個新的 function component 專門傳進 撈到資料的參數。</li>\n<li>在MAP出來的 component 傳進我們要顯示的資料 name / time / content ...等等。</li>\n<li>記得當我們要MAP陣列要給定 key 值 並且不能重複，此時傳進 id 剛好可以當我們的 key。</li>\n<li>當 massages 有資料時 &#x26;&#x26; 會把我們 Map 完的 component render 出來。  </li>\n</ul>\n</li>\n<li>\n<p>==寫一個 component 專門給定錯誤處理提示訊息==</p>\n<ul>\n<li>這個 component 會傳進 我們剛剛所設定的 apiError 的 state。</li>\n<li>在 component 判斷 setGetMessagesApiError ，給定相對應的提示訊息。</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 專門用來放 Message 資訊</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Message</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> author<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">,</span> children <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>MessageContainer<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>MessageHeader<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>MessageAuthor<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>author<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>MessageAuthor<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>MessageTime<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>time<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>MessageTime<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>MessageHeader<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>MessageBody<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>MessageBody<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>MessageContainer<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 那到資料就 MAP Message component</span>\n  <span class=\"token punctuation\">{</span>massages <span class=\"token operator\">&amp;&amp;</span>\n      massages<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">massage</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>Massage\n            key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>massage<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span>    <span class=\"token comment\">// 1.get ID 當 key</span>\n            author<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>massage<span class=\"token punctuation\">.</span>nickname<span class=\"token punctuation\">}</span>  <span class=\"token comment\">// 2.get 暱稱</span>\n          <span class=\"token comment\">// 3.get 建立時間 用 new Date().toLocaleString 轉成世界標準時間格式        </span>\n            time<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>massage<span class=\"token punctuation\">.</span>createdAt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>massage<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">}</span>    <span class=\"token comment\">// 4. get 內容</span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Massage<span class=\"token operator\">></span>\n   <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// err 處理</span>\n   <span class=\"token operator\">&lt;</span>ErrorMessage err<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>setGetMessagesApiError<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>setGetMessagesApiError <span class=\"token operator\">?</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\">_&lt; Connection failed\"</span><span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">{</span>massages <span class=\"token operator\">&amp;&amp;</span> massages<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span> here is no massages<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n   <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ErrorMessage<span class=\"token operator\">></span></code></pre></div>\n<hr>\n<h1>新增留言！ POST</h1>\n<p>我們需要用表單來傳送資料\n因此我們會需要\n拿到的資料有，也就是要控制的 state 有</p>\n<ul>\n<li>\n<p>==在input 的 component 上 監聽 value==</p>\n<ul>\n<li>初始化 value 的 useState()</li>\n<li>撈到 value 的值後 setState()</li>\n</ul>\n</li>\n<li>\n<p>==監聽表單的 component onSubmit 事件==</p>\n<ul>\n<li>在 form 上 掛上 onSubmit() 並傳進我們要做的事情，也就是送出使用者填入的資訊。</li>\n<li>監聽 onFocus 事件避免使用者空白輸入後在再次輸入錯誤訊息停留在上面</li>\n<li>在handleFoucs 中 把 setPostMessagesApiError(null) err 設為 null 清空錯誤訊息</li>\n</ul>\n</li>\n<li>\n<p>==POST請求==</p>\n<ul>\n<li>給定API要求的範例</li>\n<li>傳進我們拿到的值</li>\n<li>把 value 清空</li>\n<li>更新 get 的 data</li>\n<li>因為我們在第一次 paint 瀏覽器 讀取資料 和 post 完更新資料後，都會使用相同 的程式碼，所以我們可以 寫在一個專門 fetch  資料的 function 避免 程式碼重複。</li>\n</ul>\n</li>\n<li>\n<p>==錯誤處理==</p>\n<ul>\n<li>在 fetch 接到 data 內判斷錯誤</li>\n<li>如果 data.ok === 0 代表有錯 在此停止 return</li>\n<li>set postErrMessage  state</li>\n<li>用 fetch 接到 data 後 catch 接住錯誤</li>\n<li>set postErrMessage  state</li>\n</ul>\n</li>\n<li>\n<p>==loading 資料處理==</p>\n<ul>\n<li>初始 loading 的  state (意志)  <code class=\"language-text\">[isLoadingPostMessages, setIsLoadingPostMessages]=useState(false)</code></li>\n<li>給 loading  component   (身體) <code class=\"language-text\">&lt;Loading&gt;Loading....&lt;/Loading&gt;</code></li>\n<li>一按下表單時 判斷</li>\n<li>在流程上當資料一拿到的時候 設定 loading 的 state 是 false</li>\n<li>isLoadingPostMessages 是不是 true 是的話 return</li>\n<li>沒進判斷則 set LoadingPostMessages 為 true ，會出現 loading 畫面</li>\n<li>拿到資料則將 loading 畫面設為 false</li>\n<li>接住錯誤資訊也將  loading 畫面設為 false</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">,</span> setValue<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// post 的 </span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>postMessagesApiError<span class=\"token punctuation\">,</span> setPostMessagesApiError<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isLoadingPostMessages<span class=\"token punctuation\">,</span> setIsLoadingPostMessages<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 當input的 area 改變就幫我 setvalue</span>\n   <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleAreaChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleAreaFocus</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setPostMessagesApiError</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 共用的讀取 function</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">fetchMessages</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token constant\">API_URL</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setMessages</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setGetMessagesApiError</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">// 當表單送出</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleFormSubmit</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 阻止表單預設跳轉</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isLoadingPostMessages<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">setIsLoadingPostMessages</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// POST 請求送出  </span>\n    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://student-json-api.lidemy.me/comments\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      method<span class=\"token operator\">:</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span>\n      headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"content-type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      body<span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        nickname<span class=\"token operator\">:</span> <span class=\"token string\">\"終於換我到22週ㄌ乾\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">//剛剛我們撈到的value值</span>\n        body<span class=\"token operator\">:</span> value<span class=\"token punctuation\">,</span> \n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 解析請求轉json</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 拿到 data   </span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setIsLoadingPostMessages</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 錯誤處理</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>ok <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">setPostMessagesApiError</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">fetchMessages</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setIsLoadingPostMessages</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setPostMessagesApiError</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 表單送出 post 請求</span>\n      <span class=\"token operator\">&lt;</span>MessageForm onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleFormSubmit<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>MessageTextArea\n          rows<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span>\n          onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleAreaChange<span class=\"token punctuation\">}</span>\n          onFocus<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleAreaFocus<span class=\"token punctuation\">}</span>\n          value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>SubmitButton<span class=\"token operator\">></span> ＋ <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SubmitButton<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>MessageForm<span class=\"token operator\">></span></code></pre></div>","excerpt":"先來切個版吧 串接 API 資料 這次用的 data 是來自 Lidemy 開的練習 API 撈到 COMMENTS  API 撈到資料 > 設定 資料 state > 錯誤 state 處理 ==掛鉤資料的 state== ：因為我們的目的是取得資料，所以需要有個 state…"}},"pageContext":{"type":"posts","next":{"frontmatter":{"path":"/react06","title":"React 實戰篇 - 部落格","tags":["React","useEffect","react-router","useHistory","useLocation","useContext","JWT"]},"fileAbsolutePath":"/Users/fangciwu/gatsby/gatsby-starter-hello-friend/src/posts/react06.md"},"previous":{"frontmatter":{"path":"/react02","title":" 初探 state 實作 TodoList","tags":["React","Babel","webpack","JSX","styled-components","ThemeProvider","week21"]},"fileAbsolutePath":"/Users/fangciwu/gatsby/gatsby-starter-hello-friend/src/posts/react02.md"}}},"staticQueryHashes":["1425477374","3128451518"]}